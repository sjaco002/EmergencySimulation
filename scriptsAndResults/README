Two files are altered in the one simulator:
1) default_settings.txt
2) DTNHost.java
ALL OTHER FILES ARE DEFAULT ONE SIMULATOR FILES

Output to logs happens in DTNHost.update:
200 shelters are created at time 0.1
10 emergencies happen every 10 seconds produced by 10 different rapidly moving users:
	3 fires
	5 floods
	1 crash
	1 storm 
The one simulator doesn't give them a radius, so this should be done in convertToADM.py
One idea for radius values would be (city is around 4,500 by 3,500 and starts at 0,0)
flood:1000
fire:500
storm:2000
crash:100

Channel returns shelters that are within a radius of 300 (should be 3 or 4 on average)


Each user has a location every 100 second
Six groups of users: 2 pedestrians groups, 1 driving group, and 3 metro groups
	Each group has 835 nodes, with each node representing 100 users, for a total of 501,000 users on 5,010 unique paths

usernames are (p|c|w|t) + (0-5009) + u + (00-99)
p has 0-834
c has 835-1669
w has 1670-2504
t has 2505-5009

Logs are output to file specified in logging.properties


run.sh runs the full program, including:

generatedate.sh:
1) Compiles and runs the one simulator in ../oneSimulator to produce output file with all three datasets logged
2) Converts the output file into a seperate ADM file for each dataset (reports, locations, shelters)

convertToADM.py:
1) turns the log into individual ADM output

initializeDatasets.sh:
1) Creates datasets 
2) Fills Shelters dataset
3) Starts channels for userlocations and EmergencyReports

createSubscriptions.sh
1) Generates a subscriptions file to bulkload subscriptions
Use the following command: ./createSubscriptions.sh && scp subscriptions.adm promethium:two/.

startChannel.sh
1) Starts the channel going
2) Bulkloads Subscriptions

startPolling.sh
1) Sends individual User Queries (1 for every user) repeatedly

sendLocations.py
1) Sends User Locations over time

sendReports.py
1) Sends Reports over time
